// ============================================
// ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุฌุฏุงูููุง
// ============================================
// ูุฐุง ุงูููู ูููู ุจุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช SQLite
// ูุฅูุดุงุก ุฌููุน ุงูุฌุฏุงูู ุงููุทููุจุฉ ูุน ุงูุจูุงูุงุช ุงูุฃูููุฉ
// ============================================

const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const fs = require('fs');

// ูุณุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
const dbPath = path.join(__dirname, 'jobs.db');

// ุฏุงูุฉ ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช
function initializeDatabase() {
    console.log('๐ ุจุฏุก ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช...');

    // ุญุฐู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุฏููุฉ ุฅุฐุง ูุงูุช ููุฌูุฏุฉ
    if (fs.existsSync(dbPath)) {
        fs.unlinkSync(dbPath);
        console.log('๐๏ธ ุชู ุญุฐู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุฏููุฉ');
    }

    // ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฌุฏูุฏุฉ
    const db = new sqlite3.Database(dbPath);

    // ุชูุนูู foreign keys
    db.run('PRAGMA foreign_keys = ON');

    // ุฅูุดุงุก ุงูุฌุฏุงูู
    createTables(db);
}

// ุฏุงูุฉ ุฅูุดุงุก ุงูุฌุฏุงูู
function createTables(db) {
    console.log('๐ ุฅูุดุงุก ุงูุฌุฏุงูู...');

    // ุฌุฏูู ุงูุฅุนุฏุงุฏุงุช
    db.run(`
        CREATE TABLE settings (
            key TEXT PRIMARY KEY,
            value TEXT NOT NULL
        )
    `, (err) => {
        if (err) {
            console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุฌุฏูู settings:', err);
        } else {
            console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู settings');
        }
    });

    // ุฌุฏูู ุงููุฆุงุช
    db.run(`
        CREATE TABLE categories (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            ordering INTEGER NOT NULL
        )
    `, (err) => {
        if (err) {
            console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุฌุฏูู categories:', err);
        } else {
            console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู categories');
        }
    });

    // ุฌุฏูู ุงููุธุงุฆู
    db.run(`
        CREATE TABLE jobs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            url TEXT NOT NULL,
            category_id INTEGER NOT NULL,
            FOREIGN KEY (category_id) REFERENCES categories(id)
        )
    `, (err) => {
        if (err) {
            console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุฌุฏูู jobs:', err);
        } else {
            console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู jobs');
            // ุฅุฏุฎุงู ุงูุจูุงูุงุช ุงูุฃูููุฉ ุจุนุฏ ุฅูุดุงุก ุฌููุน ุงูุฌุฏุงูู
            insertInitialData(db);
        }
    });
}

// ุฏุงูุฉ ุฅุฏุฎุงู ุงูุจูุงูุงุช ุงูุฃูููุฉ
function insertInitialData(db) {
    console.log('๐ ุจุฏุก ุฅุฏุฎุงู ุงูุจูุงูุงุช ุงูุฃูููุฉ...');

    // ุฅุฏุฎุงู ุงูุฅุนุฏุงุฏุงุช ุฃููุงู
    insertSettings(db, () => {
        // ุฅุฏุฎุงู ุงููุฆุงุช ุซุงููุงู
        insertCategories(db, () => {
            // ุฅุฏุฎุงู ุงููุธุงุฆู ุฃุฎูุฑุงู
            insertJobs(db, () => {
                // ุฅุบูุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช
                db.close((err) => {
                    if (err) {
                        console.error('โ ุฎุทุฃ ูู ุฅุบูุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช:', err);
                    } else {
                        console.log('============================================');
                        console.log('๐ ุชู ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!');
                        console.log(`๐ ุงููููุน: ${dbPath}`);
                        console.log('๐ ุงูุฌุฏุงูู ุงูููุดุฃุฉ:');
                        console.log('   - settings (ุงูุฅุนุฏุงุฏุงุช)');
                        console.log('   - categories (ุงููุฆุงุช)');
                        console.log('   - jobs (ุงููุธุงุฆู)');
                        console.log('============================================');
                    }
                });
            });
        });
    });
}

// ุฏุงูุฉ ุฅุฏุฎุงู ุงูุฅุนุฏุงุฏุงุช
function insertSettings(db, callback) {
    console.log('๐ ุฅุฏุฎุงู ุงูุฅุนุฏุงุฏุงุช...');

    const settings = [
        ['welcome_message', 'ูุฑุญุจุงู! ุงูุชุจ \'ูุธุงุฆู\' ููุญุตูู ุนูู ูุงุฆูุฉ ุงููุธุงุฆู ุงููุชุงุญุฉ.'],
        ['invalid_keyword_message', 'ุงูุฑุฌุงุก ูุชุงุจุฉ ูููุฉ "ูุธุงุฆู" ุจุงูุดูู ุงูุตุญูุญ.'],
        ['menu_header', '๐ ูุงุฆูุฉ ุงููุธุงุฆู ุงููุชุงุญุฉ\nุงุฎุชุฑ ููุน ุงููุธุงุฆู:'],
        ['menu_footer', 'ุงุฏุฎู ุฑูู ุงููุฆุฉ'],
        ['invalid_selection_message', 'ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงุฎุชูุงุฑ ุตุญูุญ.']
    ];

    let completed = 0;
    settings.forEach(([key, value], index) => {
        db.run('INSERT INTO settings (key, value) VALUES (?, ?)', [key, value], (err) => {
            if (err) {
                console.error(`โ ุฎุทุฃ ูู ุฅุฏุฎุงู ุงูุฅุนุฏุงุฏ ${key}:`, err);
            } else {
                console.log(`โ ุชู ุฅุฏุฎุงู ุงูุฅุนุฏุงุฏ: ${key}`);
            }
            completed++;
            if (completed === settings.length) {
                console.log('โ ุชู ุฅุฏุฎุงู ุฌููุน ุงูุฅุนุฏุงุฏุงุช');
                callback();
            }
        });
    });
}

// ุฏุงูุฉ ุฅุฏุฎุงู ุงููุฆุงุช
function insertCategories(db, callback) {
    console.log('๐ ุฅุฏุฎุงู ุงููุฆุงุช...');

    const categories = [
        [1, 'ูุธุงุฆู ุนุณูุฑูุฉ', 1],
        [2, 'ูุธุงุฆู ูุฏููุฉ', 2],
        [3, 'ูุธุงุฆู ุทุจูุฉ', 3],
        [4, 'ูุธุงุฆู ุดุฑูุงุช', 4],
        [5, 'ูุธุงุฆู ูููููููู', 5],
        [6, 'ูุธุงุฆู ุญุณุจ ุงููุฏููุฉ', 6]
    ];

    let completed = 0;
    categories.forEach(([id, name, ordering], index) => {
        db.run('INSERT INTO categories (id, name, ordering) VALUES (?, ?, ?)', [id, name, ordering], (err) => {
            if (err) {
                console.error(`โ ุฎุทุฃ ูู ุฅุฏุฎุงู ุงููุฆุฉ ${name}:`, err);
            } else {
                console.log(`โ ุชู ุฅุฏุฎุงู ุงููุฆุฉ: ${name} (ID: ${id})`);
            }
            completed++;
            if (completed === categories.length) {
                console.log('โ ุชู ุฅุฏุฎุงู ุฌููุน ุงููุฆุงุช');
                callback();
            }
        });
    });
}

// ุฏุงูุฉ ุฅุฏุฎุงู ุงููุธุงุฆู
function insertJobs(db, callback) {
    console.log('๐ ุฅุฏุฎุงู ุงููุธุงุฆู ุงูุชุฌุฑูุจูุฉ...');

    const jobs = [
        // ูุธุงุฆู ุนุณูุฑูุฉ (category_id = 1)
        ['ุถุงุจุท ูู ุงูุฌูุด ุงูุณุนูุฏู', 'https://example.com/military1', 1],
        ['ุฌูุฏู ูู ุงูุญุฑุณ ุงููุทูู', 'https://example.com/military2', 1],

        // ูุธุงุฆู ูุฏููุฉ (category_id = 2)
        ['ููุธู ุญูููู ูู ูุฒุงุฑุฉ ุงูุชุนููู', 'https://example.com/civil1', 2],
        ['ูุญูู ูู ูุฒุงุฑุฉ ุงูุฏุงุฎููุฉ', 'https://example.com/civil2', 2],

        // ูุธุงุฆู ุทุจูุฉ (category_id = 3)
        ['ุทุจูุจ ูู ูุณุชุดูู ุญูููู', 'https://example.com/medical1', 3],
        ['ููุฑุถ ูู ูุฑูุฒ ุตุญู', 'https://example.com/medical2', 3],

        // ูุธุงุฆู ุดุฑูุงุช (category_id = 4)
        ['ูููุฏุณ ุจุฑูุฌูุงุช ูู ุฃุฑุงููู', 'https://example.com/company1', 4],
        ['ูุญูู ูุงูู ูู ุณุงุจู', 'https://example.com/company2', 4],

        // ูุธุงุฆู ูููููููู (category_id = 5)
        ['ุณุงุฆู ูู ุดุฑูุฉ ููู', 'https://example.com/resident1', 5],
        ['ุนุงูู ูู ูุตูุน', 'https://example.com/resident2', 5],

        // ูุธุงุฆู ุญุณุจ ุงููุฏููุฉ (category_id = 6)
        ['ูุธุงุฆู ูู ุงูุฑูุงุถ', 'https://example.com/city1', 6],
        ['ูุธุงุฆู ูู ุฌุฏุฉ', 'https://example.com/city2', 6]
    ];

    let completed = 0;
    jobs.forEach(([title, url, category_id], index) => {
        db.run('INSERT INTO jobs (title, url, category_id) VALUES (?, ?, ?)', [title, url, category_id], (err) => {
            if (err) {
                console.error(`โ ุฎุทุฃ ูู ุฅุฏุฎุงู ุงููุธููุฉ ${title}:`, err);
            } else {
                console.log(`โ ุชู ุฅุฏุฎุงู ุงููุธููุฉ: ${title} (ุงููุฆุฉ: ${category_id})`);
            }
            completed++;
            if (completed === jobs.length) {
                console.log('โ ุชู ุฅุฏุฎุงู ุฌููุน ุงููุธุงุฆู ุงูุชุฌุฑูุจูุฉ');
                callback();
            }
        });
    });
}

// ุชุดุบูู ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฅุฐุง ุชู ุชุดุบูู ุงูููู ูุจุงุดุฑุฉ
if (require.main === module) {
    initializeDatabase();
}

// ุชุตุฏูุฑ ุงูุฏูุงู ููุงุณุชุฎุฏุงู ูู ูููุงุช ุฃุฎุฑู
module.exports = {
    initializeDatabase,
    dbPath
};
